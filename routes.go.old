package tammany

import (
	"bitbucket.org/SlothNinja/slothninja-games/sn/game"
	"bitbucket.org/SlothNinja/slothninja-games/sn/mlog"
	"bitbucket.org/SlothNinja/slothninja-games/sn/type"
	"bitbucket.org/SlothNinja/slothninja-games/sn/user"

	"github.com/go-martini/martini"
)

func AddRoutes(prefix string, r martini.Router) {
	group := "/" + prefix
	r.Group(group, func(r martini.Router) {
		prefix2 := "game"
		group2 := "/" + prefix2
		r.Group(group2, func(r martini.Router) {
			prefix := prefix + "_" + prefix2
			addNewActionRoute(r, prefix)
			addCreateRoute(r, prefix)
			addShowRoute(r, prefix)
			addUpdateRoute(r, prefix)
			addAcceptRoute(r, prefix)
			addDropRoute(r, prefix)
			addAddMessageRoute(r, prefix)
			//		addJSONRoute(r, prefix)
		})
		prefix2 = "games"
		group2 = "/" + prefix2
		r.Group(group2, func(r martini.Router) {
			prefix := prefix + "_" + prefix2
			addIndexRoute(r, prefix)
		})
		prefix3 := "admin"
		group3 := "/" + prefix3
		r.Group(group3, func(r martini.Router) {
			prefix := prefix + "_" + prefix3
			addAdminShowRoute(r, prefix)
			addAdminUpdateRoute(r, prefix)
			addAdminJSONRoute(r, prefix)
		})
	})
}

//func AddRoutes(prefix string, r martini.Router) {
//	group := "/" + prefix
//	r.Group(group, func(r martini.Router) {
//		r.Get("/notifications",
//			GetRunning,
//			DailyNotifications,
//		).Name(prefix + "/notifications")
//		addIndexRoute(r, prefix)
//	})
//}
//
//func AddDefaultRoutes(prefix string, r martini.Router, remote ...bool) {
//	remoteServer := false
//	if len(remote) == 1 {
//		remoteServer = remote[0]
//	}
//	if remoteServer {
//		addHomeRoute(r)
//		addUserRoutes(r)
//	}
//	group := "/" + prefix
//	r.Group(group, func(r martini.Router) {
//		prefix2 := "game"
//		group2 := "/" + prefix2
//		r.Group(group2, func(r martini.Router) {
//			prefix := prefix + "_" + prefix2
//			addNewActionRoute(r, prefix)
//			addCreateRoute(r, prefix)
//			addShowRoute(r, prefix)
//			addUpdateRoute(r, prefix)
//			addAcceptRoute(r, prefix)
//			addDropRoute(r, prefix)
//			addAddMessageRoute(r, prefix)
//			addJSONRoute(r, prefix)
//		})
//		prefix2 = "games"
//		group2 = "/" + prefix2
//		r.Group(group2, func(r martini.Router) {
//			prefix := prefix + "_" + prefix2
//			addIndexRoute(r, prefix)
//		})
//		prefix3 := "admin"
//		group3 := "/" + prefix3
//		r.Group(group3, func(r martini.Router) {
//			prefix := prefix + "_" + prefix3
//			addAdminShowRoute(r, prefix)
//			addAdminUpdateRoute(r, prefix)
//			addAdminJSONRoute(r, prefix)
//		})
//	})
//}
//
//func addHomeRoute(r martini.Router) {
//	r.Get("/", GoHome)
//}
//
//func addUserRoutes(r martini.Router) {
//	r.Get("/user/:uid", GoUser)
//}
//
func addNewActionRoute(r martini.Router, prefix string) {
	r.Get("/new",
		user.RequireUser,
		gType.SetTypes,
		NewAction,
	).Name(prefix + "_new")
}

func addCreateRoute(r martini.Router, prefix string) {
	r.Post("",
		user.RequireUser,
		gType.SetTypes,
		Create,
	).Name(prefix + "_create")
}

func addShowRoute(r martini.Router, prefix string) {
	r.Get("/:gid",
		Fetch,
		mlog.Get,
		Show,
	).Name(prefix + "_show")
}

//func addJSONRoute(r martini.Router, prefix string) {
//	r.Get("/:gid/json",
//		Fetch,
//		mlog.Get,
//		JSON,
//	).Name(prefix + "_json")
//}
//
func addUpdateRoute(r martini.Router, prefix string) {
	r.Put("/:gid",
		user.RequireUser,
		Fetch,
		game.CurrentPlayerOrAdmin,
		Update,
	).Name(prefix + "_update")
}

func addAcceptRoute(r martini.Router, prefix string) {
	r.Put("/:gid/accept",
		user.RequireUser,
		Fetch,
		Accept,
	).Name(prefix + "_accept")
}

func addDropRoute(r martini.Router, prefix string) {
	r.Put("/:gid/drop",
		user.RequireLogin,
		Fetch,
		Drop,
	).Name(prefix + "_drop")
}

func addIndexRoute(r martini.Router, prefix string) {
	r.Get("/:status",
		user.RequireUser,
		gType.SetTypes,
		game.SetStatus,
		game.SetType,
		Index,
	).Name(prefix + "_index")

	r.Post("/:status/json",
		user.RequireUser,
		gType.SetTypes,
		game.SetType,
		game.GetFiltered,
		game.JSONIndexAction,
	).Name(prefix + "_index_json")

	r.Get("",
		user.RequireUser,
		gType.SetTypes,
		game.SetType,
		Index,
	).Name(prefix + "_index")

	r.Post("/json",
		user.RequireUser,
		gType.SetTypes,
		game.SetType,
		game.GetFiltered,
		game.JSONIndexAction,
	).Name(prefix + "_index_json")
}

func addAddMessageRoute(r martini.Router, prefix string) {
	r.Put("/:gid/addmessage",
		user.RequireLogin,
		Fetch,
		mlog.Get,
		mlog.AddMessage,
	).Name(prefix + "_addmessage")
}

func addAdminShowRoute(r martini.Router, prefix string) {
	r.Get("/:gid",
		user.RequireLogin,
		user.RequireAdmin,
		Fetch,
		mlog.Get,
		game.SetAdmin,
		Show,
	).Name(prefix + "_show")
}

func addAdminUpdateRoute(r martini.Router, prefix string) {
	r.Put("/:gid",
		user.RequireLogin,
		user.RequireAdmin,
		Fetch,
		game.SetAdmin,
		Update,
	).Name(prefix + "_update")
}

func addAdminJSONRoute(r martini.Router, prefix string) {
	r.Get("/:gid/json",
		user.RequireLogin,
		user.RequireAdmin,
		Fetch,
		mlog.Get,
		game.SetAdmin,
		JSON,
	).Name(prefix + "_json")
}
